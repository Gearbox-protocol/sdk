export const iBalancerV3RouterAdapterAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_creditManager", type: "address", internalType: "address" },
      { name: "_router", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_gearboxAdapterType",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "enum AdapterType" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_gearboxAdapterVersion",
    inputs: [],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acl",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addressProvider",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "creditManager",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllowedPools",
    inputs: [],
    outputs: [{ name: "pools", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPoolAllowed",
    inputs: [{ name: "pool", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setPoolStatusBatch",
    inputs: [
      { name: "pools", type: "address[]", internalType: "address[]" },
      { name: "statuses", type: "bool[]", internalType: "bool[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapSingleTokenDiffIn",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "contract IERC20" },
      { name: "tokenOut", type: "address", internalType: "contract IERC20" },
      { name: "leftoverAmount", type: "uint256", internalType: "uint256" },
      { name: "rateMinRAY", type: "uint256", internalType: "uint256" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      { name: "tokensToEnable", type: "uint256", internalType: "uint256" },
      { name: "tokensToDisable", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapSingleTokenExactIn",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "contract IERC20" },
      { name: "tokenOut", type: "address", internalType: "contract IERC20" },
      { name: "exactAmountIn", type: "uint256", internalType: "uint256" },
      { name: "minAmountOut", type: "uint256", internalType: "uint256" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
      { name: "", type: "bool", internalType: "bool" },
      { name: "", type: "bytes", internalType: "bytes" },
    ],
    outputs: [
      { name: "tokensToEnable", type: "uint256", internalType: "uint256" },
      { name: "tokensToDisable", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetContract",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "SetPoolStatus",
    inputs: [
      { name: "pool", type: "address", indexed: true, internalType: "address" },
      { name: "allowed", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  { type: "error", name: "CallerNotConfiguratorException", inputs: [] },
  { type: "error", name: "CallerNotCreditFacadeException", inputs: [] },
  { type: "error", name: "InvalidLengthException", inputs: [] },
  { type: "error", name: "InvalidPoolException", inputs: [] },
  { type: "error", name: "ZeroAddressException", inputs: [] },
] as const;
