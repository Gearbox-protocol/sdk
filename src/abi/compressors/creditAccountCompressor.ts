export const creditAccountCompressorAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "addressProvider_", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addressProvider",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "contractType",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "countCreditAccounts",
    inputs: [
      { name: "creditManager", type: "address", internalType: "address" },
      {
        name: "caFilter",
        type: "tuple",
        internalType: "struct CreditAccountFilter",
        components: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "includeZeroDebt", type: "bool", internalType: "bool" },
          { name: "minHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "maxHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "reverting", type: "bool", internalType: "bool" },
        ],
      },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "countCreditAccounts",
    inputs: [
      {
        name: "cmFilter",
        type: "tuple",
        internalType: "struct CreditManagerFilter",
        components: [
          {
            name: "configurators",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "creditManagers",
            type: "address[]",
            internalType: "address[]",
          },
          { name: "pools", type: "address[]", internalType: "address[]" },
          { name: "underlying", type: "address", internalType: "address" },
        ],
      },
      {
        name: "caFilter",
        type: "tuple",
        internalType: "struct CreditAccountFilter",
        components: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "includeZeroDebt", type: "bool", internalType: "bool" },
          { name: "minHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "maxHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "reverting", type: "bool", internalType: "bool" },
        ],
      },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreditAccountData",
    inputs: [
      { name: "creditAccount", type: "address", internalType: "address" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct CreditAccountData",
        components: [
          { name: "creditAccount", type: "address", internalType: "address" },
          { name: "creditManager", type: "address", internalType: "address" },
          { name: "creditFacade", type: "address", internalType: "address" },
          { name: "underlying", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "expirationDate", type: "uint40", internalType: "uint40" },
          {
            name: "enabledTokensMask",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "debt", type: "uint256", internalType: "uint256" },
          { name: "accruedInterest", type: "uint256", internalType: "uint256" },
          { name: "accruedFees", type: "uint256", internalType: "uint256" },
          { name: "totalDebtUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValueUSD", type: "uint256", internalType: "uint256" },
          { name: "twvUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValue", type: "uint256", internalType: "uint256" },
          { name: "healthFactor", type: "uint256", internalType: "uint256" },
          { name: "success", type: "bool", internalType: "bool" },
          {
            name: "tokens",
            type: "tuple[]",
            internalType: "struct TokenInfo[]",
            components: [
              { name: "token", type: "address", internalType: "address" },
              { name: "mask", type: "uint256", internalType: "uint256" },
              { name: "balance", type: "uint256", internalType: "uint256" },
              { name: "quota", type: "uint256", internalType: "uint256" },
              { name: "success", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreditAccounts",
    inputs: [
      {
        name: "cmFilter",
        type: "tuple",
        internalType: "struct CreditManagerFilter",
        components: [
          {
            name: "configurators",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "creditManagers",
            type: "address[]",
            internalType: "address[]",
          },
          { name: "pools", type: "address[]", internalType: "address[]" },
          { name: "underlying", type: "address", internalType: "address" },
        ],
      },
      {
        name: "caFilter",
        type: "tuple",
        internalType: "struct CreditAccountFilter",
        components: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "includeZeroDebt", type: "bool", internalType: "bool" },
          { name: "minHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "maxHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "reverting", type: "bool", internalType: "bool" },
        ],
      },
      { name: "offset", type: "uint256", internalType: "uint256" },
      { name: "limit", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple[]",
        internalType: "struct CreditAccountData[]",
        components: [
          { name: "creditAccount", type: "address", internalType: "address" },
          { name: "creditManager", type: "address", internalType: "address" },
          { name: "creditFacade", type: "address", internalType: "address" },
          { name: "underlying", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "expirationDate", type: "uint40", internalType: "uint40" },
          {
            name: "enabledTokensMask",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "debt", type: "uint256", internalType: "uint256" },
          { name: "accruedInterest", type: "uint256", internalType: "uint256" },
          { name: "accruedFees", type: "uint256", internalType: "uint256" },
          { name: "totalDebtUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValueUSD", type: "uint256", internalType: "uint256" },
          { name: "twvUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValue", type: "uint256", internalType: "uint256" },
          { name: "healthFactor", type: "uint256", internalType: "uint256" },
          { name: "success", type: "bool", internalType: "bool" },
          {
            name: "tokens",
            type: "tuple[]",
            internalType: "struct TokenInfo[]",
            components: [
              { name: "token", type: "address", internalType: "address" },
              { name: "mask", type: "uint256", internalType: "uint256" },
              { name: "balance", type: "uint256", internalType: "uint256" },
              { name: "quota", type: "uint256", internalType: "uint256" },
              { name: "success", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
      { name: "nextOffset", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreditAccounts",
    inputs: [
      { name: "creditManager", type: "address", internalType: "address" },
      {
        name: "caFilter",
        type: "tuple",
        internalType: "struct CreditAccountFilter",
        components: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "includeZeroDebt", type: "bool", internalType: "bool" },
          { name: "minHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "maxHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "reverting", type: "bool", internalType: "bool" },
        ],
      },
      { name: "offset", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple[]",
        internalType: "struct CreditAccountData[]",
        components: [
          { name: "creditAccount", type: "address", internalType: "address" },
          { name: "creditManager", type: "address", internalType: "address" },
          { name: "creditFacade", type: "address", internalType: "address" },
          { name: "underlying", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "expirationDate", type: "uint40", internalType: "uint40" },
          {
            name: "enabledTokensMask",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "debt", type: "uint256", internalType: "uint256" },
          { name: "accruedInterest", type: "uint256", internalType: "uint256" },
          { name: "accruedFees", type: "uint256", internalType: "uint256" },
          { name: "totalDebtUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValueUSD", type: "uint256", internalType: "uint256" },
          { name: "twvUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValue", type: "uint256", internalType: "uint256" },
          { name: "healthFactor", type: "uint256", internalType: "uint256" },
          { name: "success", type: "bool", internalType: "bool" },
          {
            name: "tokens",
            type: "tuple[]",
            internalType: "struct TokenInfo[]",
            components: [
              { name: "token", type: "address", internalType: "address" },
              { name: "mask", type: "uint256", internalType: "uint256" },
              { name: "balance", type: "uint256", internalType: "uint256" },
              { name: "quota", type: "uint256", internalType: "uint256" },
              { name: "success", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
      { name: "nextOffset", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreditAccounts",
    inputs: [
      { name: "creditManager", type: "address", internalType: "address" },
      {
        name: "caFilter",
        type: "tuple",
        internalType: "struct CreditAccountFilter",
        components: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "includeZeroDebt", type: "bool", internalType: "bool" },
          { name: "minHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "maxHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "reverting", type: "bool", internalType: "bool" },
        ],
      },
      { name: "offset", type: "uint256", internalType: "uint256" },
      { name: "limit", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple[]",
        internalType: "struct CreditAccountData[]",
        components: [
          { name: "creditAccount", type: "address", internalType: "address" },
          { name: "creditManager", type: "address", internalType: "address" },
          { name: "creditFacade", type: "address", internalType: "address" },
          { name: "underlying", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "expirationDate", type: "uint40", internalType: "uint40" },
          {
            name: "enabledTokensMask",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "debt", type: "uint256", internalType: "uint256" },
          { name: "accruedInterest", type: "uint256", internalType: "uint256" },
          { name: "accruedFees", type: "uint256", internalType: "uint256" },
          { name: "totalDebtUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValueUSD", type: "uint256", internalType: "uint256" },
          { name: "twvUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValue", type: "uint256", internalType: "uint256" },
          { name: "healthFactor", type: "uint256", internalType: "uint256" },
          { name: "success", type: "bool", internalType: "bool" },
          {
            name: "tokens",
            type: "tuple[]",
            internalType: "struct TokenInfo[]",
            components: [
              { name: "token", type: "address", internalType: "address" },
              { name: "mask", type: "uint256", internalType: "uint256" },
              { name: "balance", type: "uint256", internalType: "uint256" },
              { name: "quota", type: "uint256", internalType: "uint256" },
              { name: "success", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
      { name: "nextOffset", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreditAccounts",
    inputs: [
      {
        name: "cmFilter",
        type: "tuple",
        internalType: "struct CreditManagerFilter",
        components: [
          {
            name: "configurators",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "creditManagers",
            type: "address[]",
            internalType: "address[]",
          },
          { name: "pools", type: "address[]", internalType: "address[]" },
          { name: "underlying", type: "address", internalType: "address" },
        ],
      },
      {
        name: "caFilter",
        type: "tuple",
        internalType: "struct CreditAccountFilter",
        components: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "includeZeroDebt", type: "bool", internalType: "bool" },
          { name: "minHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "maxHealthFactor", type: "uint256", internalType: "uint256" },
          { name: "reverting", type: "bool", internalType: "bool" },
        ],
      },
      { name: "offset", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple[]",
        internalType: "struct CreditAccountData[]",
        components: [
          { name: "creditAccount", type: "address", internalType: "address" },
          { name: "creditManager", type: "address", internalType: "address" },
          { name: "creditFacade", type: "address", internalType: "address" },
          { name: "underlying", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "expirationDate", type: "uint40", internalType: "uint40" },
          {
            name: "enabledTokensMask",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "debt", type: "uint256", internalType: "uint256" },
          { name: "accruedInterest", type: "uint256", internalType: "uint256" },
          { name: "accruedFees", type: "uint256", internalType: "uint256" },
          { name: "totalDebtUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValueUSD", type: "uint256", internalType: "uint256" },
          { name: "twvUSD", type: "uint256", internalType: "uint256" },
          { name: "totalValue", type: "uint256", internalType: "uint256" },
          { name: "healthFactor", type: "uint256", internalType: "uint256" },
          { name: "success", type: "bool", internalType: "bool" },
          {
            name: "tokens",
            type: "tuple[]",
            internalType: "struct TokenInfo[]",
            components: [
              { name: "token", type: "address", internalType: "address" },
              { name: "mask", type: "uint256", internalType: "uint256" },
              { name: "balance", type: "uint256", internalType: "uint256" },
              { name: "quota", type: "uint256", internalType: "uint256" },
              { name: "success", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
      { name: "nextOffset", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
] as const;
