/// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IDataCompressorV3
/// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iDataCompressorV3Abi = [
  {
    type: "function",
    inputs: [
      { name: "creditAccount", internalType: "address", type: "address" },
      {
        name: "priceUpdates",
        internalType: "struct PriceOnDemand[]",
        type: "tuple[]",
        components: [
          { name: "token", internalType: "address", type: "address" },
          { name: "callData", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    name: "getCreditAccountData",
    outputs: [
      {
        name: "",
        internalType: "struct CreditAccountData",
        type: "tuple",
        components: [
          { name: "isSuccessful", internalType: "bool", type: "bool" },
          {
            name: "priceFeedsNeeded",
            internalType: "address[]",
            type: "address[]",
          },
          { name: "addr", internalType: "address", type: "address" },
          { name: "borrower", internalType: "address", type: "address" },
          { name: "creditManager", internalType: "address", type: "address" },
          { name: "cmName", internalType: "string", type: "string" },
          { name: "creditFacade", internalType: "address", type: "address" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "debt", internalType: "uint256", type: "uint256" },
          {
            name: "cumulativeIndexLastUpdate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "cumulativeQuotaInterest",
            internalType: "uint128",
            type: "uint128",
          },
          { name: "accruedInterest", internalType: "uint256", type: "uint256" },
          { name: "accruedFees", internalType: "uint256", type: "uint256" },
          { name: "totalDebtUSD", internalType: "uint256", type: "uint256" },
          { name: "totalValue", internalType: "uint256", type: "uint256" },
          { name: "totalValueUSD", internalType: "uint256", type: "uint256" },
          { name: "twvUSD", internalType: "uint256", type: "uint256" },
          {
            name: "enabledTokensMask",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "healthFactor", internalType: "uint256", type: "uint256" },
          { name: "baseBorrowRate", internalType: "uint256", type: "uint256" },
          {
            name: "aggregatedBorrowRate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "balances",
            internalType: "struct TokenBalance[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "balance", internalType: "uint256", type: "uint256" },
              { name: "isForbidden", internalType: "bool", type: "bool" },
              { name: "isEnabled", internalType: "bool", type: "bool" },
              { name: "isQuoted", internalType: "bool", type: "bool" },
              { name: "quota", internalType: "uint256", type: "uint256" },
              { name: "quotaRate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaCumulativeIndexLU",
                internalType: "uint256",
                type: "uint256",
              },
            ],
          },
          { name: "since", internalType: "uint64", type: "uint64" },
          { name: "cfVersion", internalType: "uint256", type: "uint256" },
          { name: "expirationDate", internalType: "uint40", type: "uint40" },
          { name: "activeBots", internalType: "address[]", type: "address[]" },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "borrower", internalType: "address", type: "address" },
      {
        name: "priceUpdates",
        internalType: "struct PriceOnDemand[]",
        type: "tuple[]",
        components: [
          { name: "token", internalType: "address", type: "address" },
          { name: "callData", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    name: "getCreditAccountsByBorrower",
    outputs: [
      {
        name: "",
        internalType: "struct CreditAccountData[]",
        type: "tuple[]",
        components: [
          { name: "isSuccessful", internalType: "bool", type: "bool" },
          {
            name: "priceFeedsNeeded",
            internalType: "address[]",
            type: "address[]",
          },
          { name: "addr", internalType: "address", type: "address" },
          { name: "borrower", internalType: "address", type: "address" },
          { name: "creditManager", internalType: "address", type: "address" },
          { name: "cmName", internalType: "string", type: "string" },
          { name: "creditFacade", internalType: "address", type: "address" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "debt", internalType: "uint256", type: "uint256" },
          {
            name: "cumulativeIndexLastUpdate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "cumulativeQuotaInterest",
            internalType: "uint128",
            type: "uint128",
          },
          { name: "accruedInterest", internalType: "uint256", type: "uint256" },
          { name: "accruedFees", internalType: "uint256", type: "uint256" },
          { name: "totalDebtUSD", internalType: "uint256", type: "uint256" },
          { name: "totalValue", internalType: "uint256", type: "uint256" },
          { name: "totalValueUSD", internalType: "uint256", type: "uint256" },
          { name: "twvUSD", internalType: "uint256", type: "uint256" },
          {
            name: "enabledTokensMask",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "healthFactor", internalType: "uint256", type: "uint256" },
          { name: "baseBorrowRate", internalType: "uint256", type: "uint256" },
          {
            name: "aggregatedBorrowRate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "balances",
            internalType: "struct TokenBalance[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "balance", internalType: "uint256", type: "uint256" },
              { name: "isForbidden", internalType: "bool", type: "bool" },
              { name: "isEnabled", internalType: "bool", type: "bool" },
              { name: "isQuoted", internalType: "bool", type: "bool" },
              { name: "quota", internalType: "uint256", type: "uint256" },
              { name: "quotaRate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaCumulativeIndexLU",
                internalType: "uint256",
                type: "uint256",
              },
            ],
          },
          { name: "since", internalType: "uint64", type: "uint64" },
          { name: "cfVersion", internalType: "uint256", type: "uint256" },
          { name: "expirationDate", internalType: "uint40", type: "uint40" },
          { name: "activeBots", internalType: "address[]", type: "address[]" },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "creditManager", internalType: "address", type: "address" },
      {
        name: "priceUpdates",
        internalType: "struct PriceOnDemand[]",
        type: "tuple[]",
        components: [
          { name: "token", internalType: "address", type: "address" },
          { name: "callData", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    name: "getCreditAccountsByCreditManager",
    outputs: [
      {
        name: "",
        internalType: "struct CreditAccountData[]",
        type: "tuple[]",
        components: [
          { name: "isSuccessful", internalType: "bool", type: "bool" },
          {
            name: "priceFeedsNeeded",
            internalType: "address[]",
            type: "address[]",
          },
          { name: "addr", internalType: "address", type: "address" },
          { name: "borrower", internalType: "address", type: "address" },
          { name: "creditManager", internalType: "address", type: "address" },
          { name: "cmName", internalType: "string", type: "string" },
          { name: "creditFacade", internalType: "address", type: "address" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "debt", internalType: "uint256", type: "uint256" },
          {
            name: "cumulativeIndexLastUpdate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "cumulativeQuotaInterest",
            internalType: "uint128",
            type: "uint128",
          },
          { name: "accruedInterest", internalType: "uint256", type: "uint256" },
          { name: "accruedFees", internalType: "uint256", type: "uint256" },
          { name: "totalDebtUSD", internalType: "uint256", type: "uint256" },
          { name: "totalValue", internalType: "uint256", type: "uint256" },
          { name: "totalValueUSD", internalType: "uint256", type: "uint256" },
          { name: "twvUSD", internalType: "uint256", type: "uint256" },
          {
            name: "enabledTokensMask",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "healthFactor", internalType: "uint256", type: "uint256" },
          { name: "baseBorrowRate", internalType: "uint256", type: "uint256" },
          {
            name: "aggregatedBorrowRate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "balances",
            internalType: "struct TokenBalance[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "balance", internalType: "uint256", type: "uint256" },
              { name: "isForbidden", internalType: "bool", type: "bool" },
              { name: "isEnabled", internalType: "bool", type: "bool" },
              { name: "isQuoted", internalType: "bool", type: "bool" },
              { name: "quota", internalType: "uint256", type: "uint256" },
              { name: "quotaRate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaCumulativeIndexLU",
                internalType: "uint256",
                type: "uint256",
              },
            ],
          },
          { name: "since", internalType: "uint64", type: "uint64" },
          { name: "cfVersion", internalType: "uint256", type: "uint256" },
          { name: "expirationDate", internalType: "uint40", type: "uint40" },
          { name: "activeBots", internalType: "address[]", type: "address[]" },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "creditManager", internalType: "address", type: "address" },
    ],
    name: "getCreditManagerData",
    outputs: [
      {
        name: "",
        internalType: "struct CreditManagerData",
        type: "tuple",
        components: [
          { name: "addr", internalType: "address", type: "address" },
          { name: "name", internalType: "string", type: "string" },
          { name: "cfVersion", internalType: "uint256", type: "uint256" },
          { name: "creditFacade", internalType: "address", type: "address" },
          {
            name: "creditConfigurator",
            internalType: "address",
            type: "address",
          },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "pool", internalType: "address", type: "address" },
          { name: "totalDebt", internalType: "uint256", type: "uint256" },
          { name: "totalDebtLimit", internalType: "uint256", type: "uint256" },
          { name: "baseBorrowRate", internalType: "uint256", type: "uint256" },
          { name: "minDebt", internalType: "uint256", type: "uint256" },
          { name: "maxDebt", internalType: "uint256", type: "uint256" },
          {
            name: "availableToBorrow",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "collateralTokens",
            internalType: "address[]",
            type: "address[]",
          },
          {
            name: "adapters",
            internalType: "struct ContractAdapter[]",
            type: "tuple[]",
            components: [
              {
                name: "targetContract",
                internalType: "address",
                type: "address",
              },
              { name: "adapter", internalType: "address", type: "address" },
            ],
          },
          {
            name: "liquidationThresholds",
            internalType: "uint256[]",
            type: "uint256[]",
          },
          { name: "isDegenMode", internalType: "bool", type: "bool" },
          { name: "degenNFT", internalType: "address", type: "address" },
          {
            name: "forbiddenTokenMask",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "maxEnabledTokensLength",
            internalType: "uint8",
            type: "uint8",
          },
          { name: "feeInterest", internalType: "uint16", type: "uint16" },
          { name: "feeLiquidation", internalType: "uint16", type: "uint16" },
          {
            name: "liquidationDiscount",
            internalType: "uint16",
            type: "uint16",
          },
          {
            name: "feeLiquidationExpired",
            internalType: "uint16",
            type: "uint16",
          },
          {
            name: "liquidationDiscountExpired",
            internalType: "uint16",
            type: "uint16",
          },
          {
            name: "quotas",
            internalType: "struct QuotaInfo[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "rate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaIncreaseFee",
                internalType: "uint16",
                type: "uint16",
              },
              { name: "totalQuoted", internalType: "uint96", type: "uint96" },
              { name: "limit", internalType: "uint96", type: "uint96" },
              { name: "isActive", internalType: "bool", type: "bool" },
            ],
          },
          {
            name: "lirm",
            internalType: "struct LinearModel",
            type: "tuple",
            components: [
              {
                name: "interestModel",
                internalType: "address",
                type: "address",
              },
              { name: "version", internalType: "uint256", type: "uint256" },
              { name: "U_1", internalType: "uint16", type: "uint16" },
              { name: "U_2", internalType: "uint16", type: "uint16" },
              { name: "R_base", internalType: "uint16", type: "uint16" },
              { name: "R_slope1", internalType: "uint16", type: "uint16" },
              { name: "R_slope2", internalType: "uint16", type: "uint16" },
              { name: "R_slope3", internalType: "uint16", type: "uint16" },
              {
                name: "isBorrowingMoreU2Forbidden",
                internalType: "bool",
                type: "bool",
              },
            ],
          },
          { name: "isPaused", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getCreditManagersV3List",
    outputs: [
      {
        name: "",
        internalType: "struct CreditManagerData[]",
        type: "tuple[]",
        components: [
          { name: "addr", internalType: "address", type: "address" },
          { name: "name", internalType: "string", type: "string" },
          { name: "cfVersion", internalType: "uint256", type: "uint256" },
          { name: "creditFacade", internalType: "address", type: "address" },
          {
            name: "creditConfigurator",
            internalType: "address",
            type: "address",
          },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "pool", internalType: "address", type: "address" },
          { name: "totalDebt", internalType: "uint256", type: "uint256" },
          { name: "totalDebtLimit", internalType: "uint256", type: "uint256" },
          { name: "baseBorrowRate", internalType: "uint256", type: "uint256" },
          { name: "minDebt", internalType: "uint256", type: "uint256" },
          { name: "maxDebt", internalType: "uint256", type: "uint256" },
          {
            name: "availableToBorrow",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "collateralTokens",
            internalType: "address[]",
            type: "address[]",
          },
          {
            name: "adapters",
            internalType: "struct ContractAdapter[]",
            type: "tuple[]",
            components: [
              {
                name: "targetContract",
                internalType: "address",
                type: "address",
              },
              { name: "adapter", internalType: "address", type: "address" },
            ],
          },
          {
            name: "liquidationThresholds",
            internalType: "uint256[]",
            type: "uint256[]",
          },
          { name: "isDegenMode", internalType: "bool", type: "bool" },
          { name: "degenNFT", internalType: "address", type: "address" },
          {
            name: "forbiddenTokenMask",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "maxEnabledTokensLength",
            internalType: "uint8",
            type: "uint8",
          },
          { name: "feeInterest", internalType: "uint16", type: "uint16" },
          { name: "feeLiquidation", internalType: "uint16", type: "uint16" },
          {
            name: "liquidationDiscount",
            internalType: "uint16",
            type: "uint16",
          },
          {
            name: "feeLiquidationExpired",
            internalType: "uint16",
            type: "uint16",
          },
          {
            name: "liquidationDiscountExpired",
            internalType: "uint16",
            type: "uint16",
          },
          {
            name: "quotas",
            internalType: "struct QuotaInfo[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "rate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaIncreaseFee",
                internalType: "uint16",
                type: "uint16",
              },
              { name: "totalQuoted", internalType: "uint96", type: "uint96" },
              { name: "limit", internalType: "uint96", type: "uint96" },
              { name: "isActive", internalType: "bool", type: "bool" },
            ],
          },
          {
            name: "lirm",
            internalType: "struct LinearModel",
            type: "tuple",
            components: [
              {
                name: "interestModel",
                internalType: "address",
                type: "address",
              },
              { name: "version", internalType: "uint256", type: "uint256" },
              { name: "U_1", internalType: "uint16", type: "uint16" },
              { name: "U_2", internalType: "uint16", type: "uint16" },
              { name: "R_base", internalType: "uint16", type: "uint16" },
              { name: "R_slope1", internalType: "uint16", type: "uint16" },
              { name: "R_slope2", internalType: "uint16", type: "uint16" },
              { name: "R_slope3", internalType: "uint16", type: "uint16" },
              {
                name: "isBorrowingMoreU2Forbidden",
                internalType: "bool",
                type: "bool",
              },
            ],
          },
          { name: "isPaused", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "staker", internalType: "address", type: "address" }],
    name: "getGaugesV3Data",
    outputs: [
      {
        name: "result",
        internalType: "struct GaugeInfo[]",
        type: "tuple[]",
        components: [
          { name: "addr", internalType: "address", type: "address" },
          { name: "pool", internalType: "address", type: "address" },
          { name: "symbol", internalType: "string", type: "string" },
          { name: "name", internalType: "string", type: "string" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "currentEpoch", internalType: "uint16", type: "uint16" },
          { name: "epochFrozen", internalType: "bool", type: "bool" },
          {
            name: "quotaParams",
            internalType: "struct GaugeQuotaParams[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "minRate", internalType: "uint16", type: "uint16" },
              { name: "maxRate", internalType: "uint16", type: "uint16" },
              {
                name: "totalVotesLpSide",
                internalType: "uint96",
                type: "uint96",
              },
              {
                name: "totalVotesCaSide",
                internalType: "uint96",
                type: "uint96",
              },
              { name: "rate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaIncreaseFee",
                internalType: "uint16",
                type: "uint16",
              },
              { name: "totalQuoted", internalType: "uint96", type: "uint96" },
              { name: "limit", internalType: "uint96", type: "uint96" },
              { name: "isActive", internalType: "bool", type: "bool" },
              {
                name: "stakerVotesLpSide",
                internalType: "uint96",
                type: "uint96",
              },
              {
                name: "stakerVotesCaSide",
                internalType: "uint96",
                type: "uint96",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      {
        name: "priceUpdates",
        internalType: "struct PriceOnDemand[]",
        type: "tuple[]",
        components: [
          { name: "token", internalType: "address", type: "address" },
          { name: "callData", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    name: "getLiquidatableCreditAccounts",
    outputs: [
      {
        name: "result",
        internalType: "struct CreditAccountData[]",
        type: "tuple[]",
        components: [
          { name: "isSuccessful", internalType: "bool", type: "bool" },
          {
            name: "priceFeedsNeeded",
            internalType: "address[]",
            type: "address[]",
          },
          { name: "addr", internalType: "address", type: "address" },
          { name: "borrower", internalType: "address", type: "address" },
          { name: "creditManager", internalType: "address", type: "address" },
          { name: "cmName", internalType: "string", type: "string" },
          { name: "creditFacade", internalType: "address", type: "address" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "debt", internalType: "uint256", type: "uint256" },
          {
            name: "cumulativeIndexLastUpdate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "cumulativeQuotaInterest",
            internalType: "uint128",
            type: "uint128",
          },
          { name: "accruedInterest", internalType: "uint256", type: "uint256" },
          { name: "accruedFees", internalType: "uint256", type: "uint256" },
          { name: "totalDebtUSD", internalType: "uint256", type: "uint256" },
          { name: "totalValue", internalType: "uint256", type: "uint256" },
          { name: "totalValueUSD", internalType: "uint256", type: "uint256" },
          { name: "twvUSD", internalType: "uint256", type: "uint256" },
          {
            name: "enabledTokensMask",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "healthFactor", internalType: "uint256", type: "uint256" },
          { name: "baseBorrowRate", internalType: "uint256", type: "uint256" },
          {
            name: "aggregatedBorrowRate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "balances",
            internalType: "struct TokenBalance[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "balance", internalType: "uint256", type: "uint256" },
              { name: "isForbidden", internalType: "bool", type: "bool" },
              { name: "isEnabled", internalType: "bool", type: "bool" },
              { name: "isQuoted", internalType: "bool", type: "bool" },
              { name: "quota", internalType: "uint256", type: "uint256" },
              { name: "quotaRate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaCumulativeIndexLU",
                internalType: "uint256",
                type: "uint256",
              },
            ],
          },
          { name: "since", internalType: "uint64", type: "uint64" },
          { name: "cfVersion", internalType: "uint256", type: "uint256" },
          { name: "expirationDate", internalType: "uint40", type: "uint40" },
          { name: "activeBots", internalType: "address[]", type: "address[]" },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "_pool", internalType: "address", type: "address" }],
    name: "getPoolData",
    outputs: [
      {
        name: "",
        internalType: "struct PoolData",
        type: "tuple",
        components: [
          { name: "addr", internalType: "address", type: "address" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "dieselToken", internalType: "address", type: "address" },
          { name: "symbol", internalType: "string", type: "string" },
          { name: "name", internalType: "string", type: "string" },
          {
            name: "baseInterestIndex",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "availableLiquidity",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "expectedLiquidity",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "totalBorrowed", internalType: "uint256", type: "uint256" },
          { name: "totalDebtLimit", internalType: "uint256", type: "uint256" },
          {
            name: "creditManagerDebtParams",
            internalType: "struct CreditManagerDebtParams[]",
            type: "tuple[]",
            components: [
              {
                name: "creditManager",
                internalType: "address",
                type: "address",
              },
              { name: "borrowed", internalType: "uint256", type: "uint256" },
              { name: "limit", internalType: "uint256", type: "uint256" },
              {
                name: "availableToBorrow",
                internalType: "uint256",
                type: "uint256",
              },
            ],
          },
          { name: "totalAssets", internalType: "uint256", type: "uint256" },
          { name: "totalSupply", internalType: "uint256", type: "uint256" },
          { name: "supplyRate", internalType: "uint256", type: "uint256" },
          {
            name: "baseInterestRate",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "dieselRate_RAY", internalType: "uint256", type: "uint256" },
          { name: "withdrawFee", internalType: "uint256", type: "uint256" },
          {
            name: "lastBaseInterestUpdate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "baseInterestIndexLU",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "version", internalType: "uint256", type: "uint256" },
          { name: "poolQuotaKeeper", internalType: "address", type: "address" },
          { name: "gauge", internalType: "address", type: "address" },
          {
            name: "quotas",
            internalType: "struct QuotaInfo[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "rate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaIncreaseFee",
                internalType: "uint16",
                type: "uint16",
              },
              { name: "totalQuoted", internalType: "uint96", type: "uint96" },
              { name: "limit", internalType: "uint96", type: "uint96" },
              { name: "isActive", internalType: "bool", type: "bool" },
            ],
          },
          {
            name: "zappers",
            internalType: "struct ZapperInfo[]",
            type: "tuple[]",
            components: [
              { name: "zapper", internalType: "address", type: "address" },
              { name: "tokenIn", internalType: "address", type: "address" },
              { name: "tokenOut", internalType: "address", type: "address" },
            ],
          },
          {
            name: "lirm",
            internalType: "struct LinearModel",
            type: "tuple",
            components: [
              {
                name: "interestModel",
                internalType: "address",
                type: "address",
              },
              { name: "version", internalType: "uint256", type: "uint256" },
              { name: "U_1", internalType: "uint16", type: "uint16" },
              { name: "U_2", internalType: "uint16", type: "uint16" },
              { name: "R_base", internalType: "uint16", type: "uint16" },
              { name: "R_slope1", internalType: "uint16", type: "uint16" },
              { name: "R_slope2", internalType: "uint16", type: "uint16" },
              { name: "R_slope3", internalType: "uint16", type: "uint16" },
              {
                name: "isBorrowingMoreU2Forbidden",
                internalType: "bool",
                type: "bool",
              },
            ],
          },
          { name: "isPaused", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getPoolsV3List",
    outputs: [
      {
        name: "",
        internalType: "struct PoolData[]",
        type: "tuple[]",
        components: [
          { name: "addr", internalType: "address", type: "address" },
          { name: "underlying", internalType: "address", type: "address" },
          { name: "dieselToken", internalType: "address", type: "address" },
          { name: "symbol", internalType: "string", type: "string" },
          { name: "name", internalType: "string", type: "string" },
          {
            name: "baseInterestIndex",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "availableLiquidity",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "expectedLiquidity",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "totalBorrowed", internalType: "uint256", type: "uint256" },
          { name: "totalDebtLimit", internalType: "uint256", type: "uint256" },
          {
            name: "creditManagerDebtParams",
            internalType: "struct CreditManagerDebtParams[]",
            type: "tuple[]",
            components: [
              {
                name: "creditManager",
                internalType: "address",
                type: "address",
              },
              { name: "borrowed", internalType: "uint256", type: "uint256" },
              { name: "limit", internalType: "uint256", type: "uint256" },
              {
                name: "availableToBorrow",
                internalType: "uint256",
                type: "uint256",
              },
            ],
          },
          { name: "totalAssets", internalType: "uint256", type: "uint256" },
          { name: "totalSupply", internalType: "uint256", type: "uint256" },
          { name: "supplyRate", internalType: "uint256", type: "uint256" },
          {
            name: "baseInterestRate",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "dieselRate_RAY", internalType: "uint256", type: "uint256" },
          { name: "withdrawFee", internalType: "uint256", type: "uint256" },
          {
            name: "lastBaseInterestUpdate",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "baseInterestIndexLU",
            internalType: "uint256",
            type: "uint256",
          },
          { name: "version", internalType: "uint256", type: "uint256" },
          { name: "poolQuotaKeeper", internalType: "address", type: "address" },
          { name: "gauge", internalType: "address", type: "address" },
          {
            name: "quotas",
            internalType: "struct QuotaInfo[]",
            type: "tuple[]",
            components: [
              { name: "token", internalType: "address", type: "address" },
              { name: "rate", internalType: "uint16", type: "uint16" },
              {
                name: "quotaIncreaseFee",
                internalType: "uint16",
                type: "uint16",
              },
              { name: "totalQuoted", internalType: "uint96", type: "uint96" },
              { name: "limit", internalType: "uint96", type: "uint96" },
              { name: "isActive", internalType: "bool", type: "bool" },
            ],
          },
          {
            name: "zappers",
            internalType: "struct ZapperInfo[]",
            type: "tuple[]",
            components: [
              { name: "zapper", internalType: "address", type: "address" },
              { name: "tokenIn", internalType: "address", type: "address" },
              { name: "tokenOut", internalType: "address", type: "address" },
            ],
          },
          {
            name: "lirm",
            internalType: "struct LinearModel",
            type: "tuple",
            components: [
              {
                name: "interestModel",
                internalType: "address",
                type: "address",
              },
              { name: "version", internalType: "uint256", type: "uint256" },
              { name: "U_1", internalType: "uint16", type: "uint16" },
              { name: "U_2", internalType: "uint16", type: "uint16" },
              { name: "R_base", internalType: "uint16", type: "uint16" },
              { name: "R_slope1", internalType: "uint16", type: "uint16" },
              { name: "R_slope2", internalType: "uint16", type: "uint16" },
              { name: "R_slope3", internalType: "uint16", type: "uint16" },
              {
                name: "isBorrowingMoreU2Forbidden",
                internalType: "bool",
                type: "bool",
              },
            ],
          },
          { name: "isPaused", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "version",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
] as const;
